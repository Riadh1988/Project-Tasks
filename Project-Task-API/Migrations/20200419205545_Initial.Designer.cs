// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_Task_API.DbContexts;

namespace Project_Task_API.Migrations
{
    [DbContext(typeof(ProjectTasksContext))]
    [Migration("20200419205545_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project_Task_API.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("84faaa9e-7712-4bab-a1d7-b7468b1b7669"),
                            Code = "ProjectCode",
                            Description = "ProjectDescription",
                            Name = "ProjectName"
                        },
                        new
                        {
                            Id = new Guid("f2118fd5-a17a-4a78-94d0-2cf842b737ff"),
                            Code = "ProjectCode1",
                            Description = "ProjectDescription1",
                            Name = "ProjectName1"
                        },
                        new
                        {
                            Id = new Guid("47d383cf-d037-47a7-af6a-43f3792df83c"),
                            Code = "ProjectCode2",
                            Description = "ProjectDescription2",
                            Name = "ProjectName2"
                        },
                        new
                        {
                            Id = new Guid("49dfddc7-01af-4689-87cd-cb1ebfd6db8e"),
                            Code = "ProjectCode3",
                            Description = "ProjectDescription3",
                            Name = "ProjectName3"
                        },
                        new
                        {
                            Id = new Guid("1d829086-34c5-4a2a-a582-f832f415c7a6"),
                            Code = "ProjectCode4",
                            Description = "ProjectDescription4",
                            Name = "ProjectName4"
                        });
                });

            modelBuilder.Entity("Project_Task_API.Entities.ProjectTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProjectTSId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectTSId");

                    b.ToTable("ProjectTasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8bf7b21b-9776-4331-9f4a-cb5a3e99b5f7"),
                            Description = "Task Description",
                            Name = "Task",
                            ProjectTSId = new Guid("1d829086-34c5-4a2a-a582-f832f415c7a6")
                        },
                        new
                        {
                            Id = new Guid("382ad33f-74b4-4d24-9c7c-93c7c438d658"),
                            Description = "Task Description2",
                            Name = "Task2",
                            ProjectTSId = new Guid("47d383cf-d037-47a7-af6a-43f3792df83c")
                        },
                        new
                        {
                            Id = new Guid("42e34542-1620-477d-8305-0411be62a569"),
                            Description = "Task Description3",
                            Name = "Task3",
                            ProjectTSId = new Guid("47d383cf-d037-47a7-af6a-43f3792df83c")
                        });
                });

            modelBuilder.Entity("Project_Task_API.Entities.ProjectTask", b =>
                {
                    b.HasOne("Project_Task_API.Entities.Project", "Project")
                        .WithMany("ProjectTasks")
                        .HasForeignKey("ProjectTSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
